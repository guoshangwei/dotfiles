#!/usr/bin/env ruby

require "fileutils"
require "pathname"
require "shellwords"
include FileUtils::Verbose

class Pathname
  alias_method :/, :+ unless method_defined?(:/)
  alias_method :to_str, :to_s unless method_defined?(:to_str)
end

OS = RUBY_PLATFORM =~ /darwin/ ? :osx : :linux
HOSTNAME = `hostname`.chomp
ROOT = Pathname.new(__FILE__).parent.expand_path
DOTFILES_HOME = ROOT/"home"
DOTFILES_HOME_CSR = ROOT/"home_csr"
HOME = Pathname.new(Dir.home)

def system(*args)
  puts args.shelljoin
  super
end

def link_files(src_dir, dst_dir, options = {})
  mkdir_p dst_dir unless dst_dir.directory?
  src_dir.children.each do |file|
    next if options.fetch(:skip_directory, true) && file.directory?
    next if file.basename.to_s == ".DS_Store"
    ln_sf file, dst_dir
  end
end

def clean(dir)
  dir.children.each do |file|
    next if file.exist?
    next unless file.symlink?
    if file.readlink.to_s.start_with? ROOT.to_s
      rm file
    end
  end
end

def csr?
  HOSTNAME =~ /.*\.comp\.hkbu\.edu\.hk/ || HOSTNAME =~ /^csr\d+/
end

# Link files
link_files(DOTFILES_HOME, HOME)
link_files(DOTFILES_HOME/".config", HOME/".config", skip_directory: false)

if csr?
  link_files(DOTFILES_HOME_CSR, HOME)
  link_files(DOTFILES_HOME_CSR/".ssh", HOME/".ssh")
  link_files(DOTFILES_HOME_CSR/".gnupg", HOME/".gnupg")
else
  link_files(DOTFILES_HOME/".ssh", HOME/".ssh")
  link_files(DOTFILES_HOME/".gnupg", HOME/".gnupg")
end

# Cleanup broken symlinks
clean(HOME)
clean(HOME/".config")
clean(HOME/".ssh")
clean(HOME/".gnupg")

# Post linking
system "lesskey"
OMZ_DIR = HOME/".config/zsh/oh-my-zsh"
unless OMZ_DIR.exist?
  system "git", "clone", "--depth=1", "https://github.com/robbyrussell/oh-my-zsh", OMZ_DIR
end

TPM_DIR = HOME/".config/tmux/plugins/tpm"
unless TPM_DIR.exist?
  system "git", "clone", "--depth=1", "https://github.com/tmux-plugins/tpm", TPM_DIR
  system "#{TPM_DIR}/scripts/install_plugins.sh", "--shell-echo"
end
